name: Create a JKMP.Core release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout files
        uses: actions/checkout@v2
      - name: Download JKMP.Core
        uses: robinraju/release-downloader@v1.3
        with:
          repository: Jump-King-Modding-Platform/JKMP.Core
          latest: true
          fileName: JKMP.Core.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          out-file-path: ./temp/
      - name: Extract files to dist folder
        run: |
          unzip ./temp/JKMP.Core.zip -d ./dist/
          mkdir -p ./dist/JKMP/Dependencies
          mv ./dist/0Harmony.dll ./dist/JKMP/Dependencies/
          mv ./dist/Semver.dll ./dist/JKMP/Dependencies/
          mv ./dist/Facepunch.Steamworks.Win32.dll ./dist/JKMP/Dependencies/
          mv ./dist/System.Collections.Immutable.dll ./dist/JKMP/Dependencies/
      - name: Copy steam redistributables
        run: |
          cp ./Redist/Steam/* ./dist/
      - name: Download JKMP.Core.Loader.NetFramework
        uses: robinraju/release-downloader@v1.3
        with:Jump-King-Modding-Platform
          repository: Jump-King-Multiplayer/JKMP.Core.Loader.NetFramework
          latest: true
          fileName: JKMP.Core.Loader.NetFramework.dll
          token: ${{ secrets.GITHUB_TOKEN }}
          out-file-path: ./dist/JKMP/Loaders/
      - name: Download patcher
        uses: robinraju/release-downloader@v1.3
        with:Jump-King-Modding-Platform
          repository: Jump-King-Multiplayer/JKMP.Patcher
          latest: true
          fileName: JKMP.Patcher.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          out-file-path: ./temp/
      - name: Extract patcher
        run: |
          unzip ./temp/JKMP.Patcher.zip -d ./dist/
      - name: Package JKMP.Core
        uses: vimtor/action-zip@v1
        with:
          files: dist/
          dest: out/Core.zip
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: Core
          artifacts: out/Core.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "core_latest"
          draft: true # Details will be filled in manually before release if necessary. Also allows for testing the release before it's published.
